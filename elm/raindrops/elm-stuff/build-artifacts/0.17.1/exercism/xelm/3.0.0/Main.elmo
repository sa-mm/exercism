var _exercism$xelm$Main$tests = A2(
	_elm_community$elm_test$Test$describe,
	'Raindrops',
	_elm_lang$core$Native_List.fromArray(
		[
			A2(
			_elm_community$elm_test$Test$test,
			'1',
			function (_p0) {
				var _p1 = _p0;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'1',
					_exercism$xelm$Raindrops$raindrops(1));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'3',
			function (_p2) {
				var _p3 = _p2;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Pling',
					_exercism$xelm$Raindrops$raindrops(3));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'5',
			function (_p4) {
				var _p5 = _p4;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Plang',
					_exercism$xelm$Raindrops$raindrops(5));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'7',
			function (_p6) {
				var _p7 = _p6;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Plong',
					_exercism$xelm$Raindrops$raindrops(7));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'6',
			function (_p8) {
				var _p9 = _p8;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Pling',
					_exercism$xelm$Raindrops$raindrops(6));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'9',
			function (_p10) {
				var _p11 = _p10;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Pling',
					_exercism$xelm$Raindrops$raindrops(9));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'10',
			function (_p12) {
				var _p13 = _p12;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Plang',
					_exercism$xelm$Raindrops$raindrops(10));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'14',
			function (_p14) {
				var _p15 = _p14;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Plong',
					_exercism$xelm$Raindrops$raindrops(14));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'15',
			function (_p16) {
				var _p17 = _p16;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'PlingPlang',
					_exercism$xelm$Raindrops$raindrops(15));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'21',
			function (_p18) {
				var _p19 = _p18;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'PlingPlong',
					_exercism$xelm$Raindrops$raindrops(21));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'25',
			function (_p20) {
				var _p21 = _p20;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Plang',
					_exercism$xelm$Raindrops$raindrops(25));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'35',
			function (_p22) {
				var _p23 = _p22;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'PlangPlong',
					_exercism$xelm$Raindrops$raindrops(35));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'49',
			function (_p24) {
				var _p25 = _p24;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'Plong',
					_exercism$xelm$Raindrops$raindrops(49));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'52',
			function (_p26) {
				var _p27 = _p26;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'52',
					_exercism$xelm$Raindrops$raindrops(52));
			}),
			A2(
			_elm_community$elm_test$Test$test,
			'105',
			function (_p28) {
				var _p29 = _p28;
				return A2(
					_elm_community$elm_test$Expect$equal,
					'PlingPlangPlong',
					_exercism$xelm$Raindrops$raindrops(105));
			})
		]));
var _exercism$xelm$Main$emit = _elm_lang$core$Native_Platform.outgoingPort(
	'emit',
	function (v) {
		return [v._0, v._1];
	});
var _exercism$xelm$Main$main = {
	main: A2(_rtfeldman$node_test_runner$Test_Runner_Node$run, _exercism$xelm$Main$emit, _exercism$xelm$Main$tests),
	flags: _elm_lang$core$Json_Decode$value
};
